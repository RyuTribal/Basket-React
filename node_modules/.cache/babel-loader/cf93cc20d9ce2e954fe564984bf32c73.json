{"ast":null,"code":"import { TimelineMax as Timeline, Power1 } from 'gsap';\nimport { loadAll } from \"../js/home.js\";\n\nconst getDefaultTimeline = (node, delay) => {\n  const timeline = new Timeline({\n    paused: true\n  });\n  const content = node.querySelector('.content');\n  const contentInner = node.querySelector('.content--inner');\n  timeline.from(node, 0.3, {\n    display: 'none',\n    autoAlpha: 0,\n    delay,\n    ease: Power1.easeIn\n  }).from(content, 0.15, {\n    autoAlpha: 0,\n    y: 25,\n    ease: Power1.easeInOut\n  }).from(contentInner, 0.15, {\n    autoAlpha: 0,\n    delay: 0.15,\n    ease: Power1.easeIn\n  });\n  return timeline;\n};\n\nconst getHomeTimeline = (node, delay) => {\n  const timeline = new Timeline({\n    paused: true\n  });\n  const texts = node.querySelectorAll('h1 > div');\n  const load = \"\";\n  timeline.from(node, 0, {\n    display: 'none',\n    autoAlpha: 0,\n    delay\n  }).staggerFrom(texts, 0.375, {\n    autoAlpha: 0,\n    x: -25,\n    ease: Power1.easeOut\n  }, 0.125);\n  return timeline;\n};\n\nexport const play = (pathname, node, appears) => {\n  const delay = appears ? 0 : 0.5;\n  let timeline;\n\n  if (pathname === '/') {\n    timeline = getHomeTimeline(node, delay);\n    load = loadAll();\n  } else {\n    timeline = getDefaultTimeline(node, delay);\n    load = loadAll();\n  }\n\n  requestAnimationFrame(() => timeline.play());\n};\nexport const exit = node => {\n  const timeline = new Timeline({\n    paused: true\n  });\n  timeline.to(node, 0.15, {\n    autoAlpha: 0,\n    ease: Power1.easeOut\n  });\n  timeline.play();\n};","map":{"version":3,"sources":["c:\\Programming\\huddingeBasket\\huddinge-basket\\src\\timelines\\index.js"],"names":["TimelineMax","Timeline","Power1","loadAll","getDefaultTimeline","node","delay","timeline","paused","content","querySelector","contentInner","from","display","autoAlpha","ease","easeIn","y","easeInOut","getHomeTimeline","texts","querySelectorAll","load","staggerFrom","x","easeOut","play","pathname","appears","requestAnimationFrame","exit","to"],"mappings":"AAAA,SAASA,WAAW,IAAIC,QAAxB,EAAkCC,MAAlC,QAAgD,MAAhD;AACA,SAASC,OAAT,QAAwB,eAAxB;;AAEA,MAAMC,kBAAkB,GAAG,CAACC,IAAD,EAAOC,KAAP,KAAiB;AAC1C,QAAMC,QAAQ,GAAG,IAAIN,QAAJ,CAAa;AAAEO,IAAAA,MAAM,EAAE;AAAV,GAAb,CAAjB;AACA,QAAMC,OAAO,GAAGJ,IAAI,CAACK,aAAL,CAAmB,UAAnB,CAAhB;AACA,QAAMC,YAAY,GAAGN,IAAI,CAACK,aAAL,CAAmB,iBAAnB,CAArB;AAEAH,EAAAA,QAAQ,CACLK,IADH,CACQP,IADR,EACc,GADd,EACmB;AAAEQ,IAAAA,OAAO,EAAE,MAAX;AAAmBC,IAAAA,SAAS,EAAE,CAA9B;AAAiCR,IAAAA,KAAjC;AAAwCS,IAAAA,IAAI,EAAEb,MAAM,CAACc;AAArD,GADnB,EAEGJ,IAFH,CAEQH,OAFR,EAEiB,IAFjB,EAEuB;AAAEK,IAAAA,SAAS,EAAE,CAAb;AAAgBG,IAAAA,CAAC,EAAE,EAAnB;AAAuBF,IAAAA,IAAI,EAAEb,MAAM,CAACgB;AAApC,GAFvB,EAGGN,IAHH,CAGQD,YAHR,EAGsB,IAHtB,EAG4B;AAAEG,IAAAA,SAAS,EAAE,CAAb;AAAgBR,IAAAA,KAAK,EAAE,IAAvB;AAA6BS,IAAAA,IAAI,EAAEb,MAAM,CAACc;AAA1C,GAH5B;AAKA,SAAOT,QAAP;AACD,CAXD;;AAaA,MAAMY,eAAe,GAAG,CAACd,IAAD,EAAOC,KAAP,KAAiB;AACvC,QAAMC,QAAQ,GAAG,IAAIN,QAAJ,CAAa;AAAEO,IAAAA,MAAM,EAAE;AAAV,GAAb,CAAjB;AACA,QAAMY,KAAK,GAAGf,IAAI,CAACgB,gBAAL,CAAsB,UAAtB,CAAd;AACA,QAAMC,IAAI,GAAG,EAAb;AAEAf,EAAAA,QAAQ,CACLK,IADH,CACQP,IADR,EACc,CADd,EACiB;AAAEQ,IAAAA,OAAO,EAAE,MAAX;AAAmBC,IAAAA,SAAS,EAAE,CAA9B;AAAiCR,IAAAA;AAAjC,GADjB,EAEGiB,WAFH,CAEeH,KAFf,EAEsB,KAFtB,EAE6B;AAAEN,IAAAA,SAAS,EAAE,CAAb;AAAgBU,IAAAA,CAAC,EAAE,CAAC,EAApB;AAAwBT,IAAAA,IAAI,EAAEb,MAAM,CAACuB;AAArC,GAF7B,EAE6E,KAF7E;AAIA,SAAOlB,QAAP;AACD,CAVD;;AAYA,OAAO,MAAMmB,IAAI,GAAG,CAACC,QAAD,EAAWtB,IAAX,EAAiBuB,OAAjB,KAA6B;AAC/C,QAAMtB,KAAK,GAAGsB,OAAO,GAAG,CAAH,GAAO,GAA5B;AACA,MAAIrB,QAAJ;;AAEA,MAAIoB,QAAQ,KAAK,GAAjB,EAAqB;AACnBpB,IAAAA,QAAQ,GAAGY,eAAe,CAACd,IAAD,EAAOC,KAAP,CAA1B;AACAgB,IAAAA,IAAI,GAAGnB,OAAO,EAAd;AACD,GAHD,MAGK;AACHI,IAAAA,QAAQ,GAAGH,kBAAkB,CAACC,IAAD,EAAOC,KAAP,CAA7B;AACAgB,IAAAA,IAAI,GAAGnB,OAAO,EAAd;AACD;;AACD0B,EAAAA,qBAAqB,CAAC,MAAMtB,QAAQ,CAACmB,IAAT,EAAP,CAArB;AACD,CAZM;AAcP,OAAO,MAAMI,IAAI,GAAIzB,IAAD,IAAU;AAC5B,QAAME,QAAQ,GAAG,IAAIN,QAAJ,CAAa;AAAEO,IAAAA,MAAM,EAAE;AAAV,GAAb,CAAjB;AAEAD,EAAAA,QAAQ,CAACwB,EAAT,CAAY1B,IAAZ,EAAkB,IAAlB,EAAwB;AAAES,IAAAA,SAAS,EAAE,CAAb;AAAgBC,IAAAA,IAAI,EAAEb,MAAM,CAACuB;AAA7B,GAAxB;AACAlB,EAAAA,QAAQ,CAACmB,IAAT;AACD,CALM","sourcesContent":["import { TimelineMax as Timeline, Power1 } from 'gsap';\r\nimport { loadAll } from \"../js/home.js\";\r\n\r\nconst getDefaultTimeline = (node, delay) => {\r\n  const timeline = new Timeline({ paused: true });\r\n  const content = node.querySelector('.content');\r\n  const contentInner = node.querySelector('.content--inner');\r\n\r\n  timeline\r\n    .from(node, 0.3, { display: 'none', autoAlpha: 0, delay, ease: Power1.easeIn })\r\n    .from(content, 0.15, { autoAlpha: 0, y: 25, ease: Power1.easeInOut })\r\n    .from(contentInner, 0.15, { autoAlpha: 0, delay: 0.15, ease: Power1.easeIn });\r\n\r\n  return timeline;\r\n}\r\n\r\nconst getHomeTimeline = (node, delay) => {\r\n  const timeline = new Timeline({ paused: true });\r\n  const texts = node.querySelectorAll('h1 > div');\r\n  const load = \"\";\r\n\r\n  timeline\r\n    .from(node, 0, { display: 'none', autoAlpha: 0, delay })\r\n    .staggerFrom(texts, 0.375, { autoAlpha: 0, x: -25, ease: Power1.easeOut }, 0.125);\r\n\r\n  return timeline;\r\n}\r\n\r\nexport const play = (pathname, node, appears) => {\r\n  const delay = appears ? 0 : 0.5;\r\n  let timeline\r\n\r\n  if (pathname === '/'){\r\n    timeline = getHomeTimeline(node, delay);\r\n    load = loadAll();\r\n  }else{\r\n    timeline = getDefaultTimeline(node, delay);\r\n    load = loadAll();\r\n  }\r\n  requestAnimationFrame(() => timeline.play())\r\n}\r\n\r\nexport const exit = (node) => {\r\n  const timeline = new Timeline({ paused: true });\r\n\r\n  timeline.to(node, 0.15, { autoAlpha: 0, ease: Power1.easeOut });\r\n  timeline.play();\r\n}\r\n"]},"metadata":{},"sourceType":"module"}